//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using CQRSAzure.CommandDefinition;

/// <remarks>
/// Each league will have an unique name
/// </remarks>
namespace Leagues.League.commandDefinition
{
    


    /// <summary>
    /// Set the email address for the league
    /// </summary>
    [CQRSAzure.EventSourcing.DomainNameAttribute("Leagues")]
    [CQRSAzure.EventSourcing.Category("Organisation")]
    public  class Set_Email_Address_Definition : 
        CommandDefinitionBase, ISet_Email_Address_Definition
    {
        
        /// <summary>
        /// The unique name of this command
        /// Set Email Address
        /// </summary>
        public override string CommandName
        {
            get
            {
                return "Set Email Address";
            }
        }
        
        /// <summary>
        /// The new enail address for the league
        /// </summary>
        public string New_Email_Address
        {
            get
            {
                if (base.ParameterExists(nameof(New_Email_Address), 0))
                {
                    return base.GetParameterValue<string>(nameof(New_Email_Address), 0);
                }
                else
                {
                    // Default to an empty string as not every receiver can deal with NULL
                    return @"";
                }
            }
            set
            {
                base.SetParameterValue(nameof(New_Email_Address), 0, ref value);
            }
        }
        
        public string Notes
        {
            get
            {
                if (base.ParameterExists(nameof(Notes),0))
                {
                    return base.GetParameterValue<string>(nameof(Notes), 0);
                }
                else
                {
                    // Default to an empty string as not every receiver can deal with NULL
                    return @"";
                }
            }
            set
            {
                base.SetParameterValue(nameof(Notes), 0, ref value);
            }
        }
        
        /// <summary>
        /// The name of the league whose email address is being set
        /// </summary>
        /// <remarks>
        /// This is the unique key for the league aggregate
        /// </remarks>
        [CQRSAzure.EventSourcing.AggregateKey()]
        public string LeagueName
        {
            get
            {
                if (base.ParameterExists(nameof(LeagueName ), 0))
                {
                    return base.GetParameterValue<string>(nameof(LeagueName ), 0);
                }
                else
                {
                    return @"";
                }
            }
            set
            {
                base.SetParameterValue(nameof(LeagueName ), 0, ref value);
            }
        }
    }
}
