//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using CQRSAzure.EventSourcing;
using System;
using System.Runtime.Serialization;

/// <remarks>
/// Each league will have an unique name
/// </remarks>
namespace Leagues.League.eventDefinition
{

    /// <summary>
    /// The contact details for the league have changed
    /// </summary>
    [Serializable()]
    [DomainNameAttribute("Leagues")]
    [Category("Organisation")]
    [EventAsOfDateAttribute("Effective_From")]
    public partial class Contact_Details_Changed : object, IContact_Details_Changed
    {
        
        // Version number - always increment this if the event definition changes
        public const int EVENT_VERSION = 0;
        
        #region Private members
        // TODO: Make this property read only
        private System.DateTime _Effective_From;
        
        // TODO: Make this property read only
        private string _Twitter_Handle;
        
        // TODO: Make this property read only
        private string _Email_Address;
        #endregion
        
        /// <summary>
        /// Empty constructor For serialisation
        /// This should be removed If serialisation Is Not needed
        /// </summary>
        public Contact_Details_Changed()
        {
        }
        
        /// <summary>
        /// Create And populate a New instance Of this Class from the underlying Interface
        /// </summary>
        /// <remarks>
        /// This should be called When the Event Is created from an Event stream
        /// </remarks>
        public Contact_Details_Changed(IContact_Details_Changed Contact_Details_ChangedInit)
        {
            _Effective_From = Contact_Details_ChangedInit.Effective_From;
            _Twitter_Handle = Contact_Details_ChangedInit.Twitter_Handle;
            _Email_Address = Contact_Details_ChangedInit.Email_Address;
        }
        
        /// <summary>
        /// Create And populate a New instance Of this Class from the underlying properties
        /// </summary>
        /// <remarks>
        /// This should be called When the Event Is created from an Event stream
        /// </remarks>
        /// <param name="Effective From">
        /// </param>
        /// <param name="Twitter Handle">
        /// The twitter handle of the league organisation
        /// </param>
        /// <param name="Email Address">
        /// The primary email address of the league
        /// </param>
        public Contact_Details_Changed(System.DateTime Effective_From_In, string Twitter_Handle_In, string Email_Address_In)
        {
            _Effective_From = Effective_From_In;
            _Twitter_Handle = Twitter_Handle_In;
            _Email_Address = Email_Address_In;
        }
        
        /// <summary>
        /// Create And populate a New instance Of this Class from the serialized data
        /// </summary>
        /// <param name="info">
        /// The SerializationInfo passed In containing the values Of this Event
        /// </param>
        /// <param name="context">
        /// Additional StreamingContext On how the Event Is streamed
        /// </param>
        Contact_Details_Changed(SerializationInfo info, StreamingContext context)
        {
            _Effective_From = info.GetDateTime("Effective_From");
            _Twitter_Handle = info.GetString("Twitter_Handle");
            _Email_Address = info.GetString("Email_Address");
        }
        
        public uint Version
        {
            get
            {
                return EVENT_VERSION;
            }
        }
        
        public System.DateTime Effective_From
        {
            get
            {
                return _Effective_From;
            }
        }
        
        /// <summary>
        /// The twitter handle of the league organisation
        /// </summary>
        public string Twitter_Handle
        {
            get
            {
                return _Twitter_Handle;
            }
        }
        
        /// <summary>
        /// The primary email address of the league
        /// </summary>
        public string Email_Address
        {
            get
            {
                return _Email_Address;
            }
        }
        
        /// <summary>
        /// Factory method To create an instance Of this Event
        /// </summary>
        /// <param name="Effective From">
        /// </param>
        /// <param name="Twitter Handle">
        /// The twitter handle of the league organisation
        /// </param>
        /// <param name="Email Address">
        /// The primary email address of the league
        /// </param>
        public static IContact_Details_Changed Create(System.DateTime Effective_From_In, string Twitter_Handle_In, string Email_Address_In)
        {
            return new Contact_Details_Changed(Effective_From_In, Twitter_Handle_In, Email_Address_In);
        }
        
        /// <summary>
        /// Populates a SerializationInfo with the data needed to serialize this event instance
        /// </summary>
        /// <remarks>
        /// The version number is also to be saved
        /// </remarks>
        public void GetObjectData(SerializationInfo info, StreamingContext context)
        {
            info.AddValue("Effective_From", _Effective_From);
            info.AddValue("Twitter_Handle", _Twitter_Handle);
            info.AddValue("Email_Address", _Email_Address);
            info.AddValue("EVENT_VERSION", EVENT_VERSION);
        }
    }
}
